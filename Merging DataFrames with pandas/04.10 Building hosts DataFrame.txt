# Import pandas
import pandas as pd

# Left join editions and ioc_codes: hosts
hosts = pd.merge(editions, ioc_codes, how="left")
print(hosts.shape)
print(hosts)

# Extract relevant columns and set index: hosts
hosts = hosts[["Edition","NOC"]].set_index("Edition")
print(hosts.shape)
print(hosts)

# Fix missing 'NOC' values of hosts
print(hosts.loc[hosts.NOC.isnull()])
hosts.loc[1972, 'NOC'] = 'FRG' #Federal Republic of Germany
hosts.loc[1980, 'NOC'] = 'URS' #Union of Soviet Socialist Republics
hosts.loc[1988, 'NOC'] = 'KOR' #Korea, South

# Reset Index of hosts: hosts
hosts = hosts.reset_index()

# Print hosts
print(hosts.shape)
print(hosts)
________________________________________________________
OUT:
	(26, 5)
	    Edition  Grand Total         City                     Country  NOC

	0      1896          151       Athens                      Greece  GRE
	1      1900          512        Paris                      France  FRA
	2      1904          470    St. Louis               United States  USA
	3      1908          804       London              United Kingdom  GBR
	4      1912          885    Stockholm                      Sweden  SWE
	5      1920         1298      Antwerp                     Belgium  BEL
	6      1924          884        Paris                      France  FRA
	7      1928          710    Amsterdam                 Netherlands  NED
	8      1932          615  Los Angeles               United States  USA
	9      1936          875       Berlin                     Germany  GER
	10     1948          814       London              United Kingdom  GBR
	11     1952          889     Helsinki                     Finland  FIN
	12     1956          885    Melbourne                   Australia  AUS
	13     1960          882         Rome                       Italy  ITA
	14     1964         1010        Tokyo                       Japan  JPN
	15     1968         1031  Mexico City                      Mexico  MEX
	16     1972         1185       Munich  West Germany (now Germany)  NaN
	17     1976         1305     Montreal                      Canada  CAN
	18     1980         1387       Moscow       U.S.S.R. (now Russia)  NaN
	19     1984         1459  Los Angeles               United States  USA
	20     1988         1546        Seoul                 South Korea  NaN
	21     1992         1705    Barcelona                       Spain  ESP
	22     1996         1859      Atlanta               United States  USA
	23     2000         2015       Sydney                   Australia  AUS
	24     2004         1998       Athens                      Greece  GRE
	25     2008         2042      Beijing                       China  CHN>


	(26, 1)
	         NOC
	Edition     
	1896     GRE
	1900     FRA
	1904     USA
	1908     GBR
	1912     SWE
	1920     BEL
	1924     FRA
	1928     NED
	1932     USA
	1936     GER
	1948     GBR
	1952     FIN
	1956     AUS
	1960     ITA
	1964     JPN
	1968     MEX
	1972     NaN
	1976     CAN
	1980     NaN
	1984     USA
	1988     NaN
	1992     ESP
	1996     USA
	2000     AUS
	2004     GRE
	2008     CHN


	         NOC
	Edition     
	1972     NaN
	1980     NaN
	1988     NaN

	
	(26, 2)
	    Edition  NOC
	0      1896  GRE
	1      1900  FRA
	2      1904  USA
	3      1908  GBR
	4      1912  SWE
	5      1920  BEL
	6      1924  FRA
	7      1928  NED
	8      1932  USA
	9      1936  GER
	10     1948  GBR
	11     1952  FIN
	12     1956  AUS
	13     1960  ITA
	14     1964  JPN
	15     1968  MEX
	16     1972  FRG
	17     1976  CAN
	18     1980  URS
	19     1984  USA
	20     1988  KOR
	21     1992  ESP
	22     1996  USA
	23     2000  AUS
	24     2004  GRE
	25     2008  CHN
________________________________________________________
IPYTHONSHELL:
BEFORE EXECUTE THE EXCERCISE:
##################################################################
# editions                                                       #
##################################################################
In [1]: editions.shape
	Out[1]: (26, 4)

In [2]: editions
	Out[2]: 
	    Edition  Grand Total         City                     Country
	0      1896          151       Athens                      Greece
	1      1900          512        Paris                      France
	2      1904          470    St. Louis               United States
	3      1908          804       London              United Kingdom
	4      1912          885    Stockholm                      Sweden
	5      1920         1298      Antwerp                     Belgium
	6      1924          884        Paris                      France
	7      1928          710    Amsterdam                 Netherlands
	8      1932          615  Los Angeles               United States
	9      1936          875       Berlin                     Germany
	10     1948          814       London              United Kingdom
	11     1952          889     Helsinki                     Finland
	12     1956          885    Melbourne                   Australia
	13     1960          882         Rome                       Italy
	14     1964         1010        Tokyo                       Japan
	15     1968         1031  Mexico City                      Mexico
	16     1972         1185       Munich  West Germany (now Germany)
	17     1976         1305     Montreal                      Canada
	18     1980         1387       Moscow       U.S.S.R. (now Russia)
	19     1984         1459  Los Angeles               United States
	20     1988         1546        Seoul                 South Korea
	21     1992         1705    Barcelona                       Spain
	22     1996         1859      Atlanta               United States
	23     2000         2015       Sydney                   Australia
	24     2004         1998       Athens                      Greece
	25     2008         2042      Beijing                       China

In [3]: editions.info()
	<class 'pandas.core.frame.DataFrame'>
	RangeIndex: 26 entries, 0 to 25
	Data columns (total 4 columns):
	Edition        26 non-null int64
	Grand Total    26 non-null int64
	City           26 non-null object
	Country        26 non-null object
	dtypes: int64(2), object(2)
	memory usage: 912.0+ bytes

In [4]: editions.columns
	Out[4]: Index(['Edition', 'Grand Total', 'City', 'Country'], dtype='object')

In [5]: editions.index
	Out[5]: RangeIndex(start=0, stop=26, step=1)

##################################################################
# ioc_codes                                                      #
##################################################################
In [6]: ioc_codes.shape
	Out[6]: (201, 2)

In [7]: ioc_codes.head()
	Out[7]: 
	           Country  NOC
	0      Afghanistan  AFG
	1          Albania  ALB
	2          Algeria  ALG
	3  American Samoa*  ASA
	4          Andorra  AND

In [8]: ioc_codes.tail()
	Out[8]: 
	             Country  NOC
	196          Vietnam  VIE
	197  Virgin Islands*  ISV
	198            Yemen  YEM
	199           Zambia  ZAM
	200         Zimbabwe  ZIM

In [9]: ioc_codes.info()
	<class 'pandas.core.frame.DataFrame'>
	RangeIndex: 201 entries, 0 to 200
	Data columns (total 2 columns):
	Country    201 non-null object
	NOC        201 non-null object
	dtypes: object(2)
	memory usage: 3.2+ KB

In [10]: ioc_codes.columns
	Out[10]: Index(['Country', 'NOC'], dtype='object')

In [11]: ioc_codes.index
	Out[11]: RangeIndex(start=0, stop=201, step=1)

AFTER EXECUTE THE EXCERCISE:
In [13]: ioc_codes[ioc_codes["NOC"]=="FRG"]
	Out[13]: 
	Empty DataFrame
	Columns: [Country, NOC]
	Index: []

In [14]: ioc_codes[ioc_codes.Country.str.contains("Germany")]
	Out[14]: 
	    Country  NOC
	70  Germany  GER

In [15]: ioc_codes[ioc_codes["NOC"]=="URS"]
	Out[15]: 
	Empty DataFrame
	Columns: [Country, NOC]
	Index: []

In [16]: ioc_codes[ioc_codes.Country.str.contains("Russia")]
	Out[16]: 
	    Country  NOC
	150  Russia  RUS

In [17]: ioc_codes[ioc_codes["NOC"]=="KOR"]

	Out[17]:
	         Country  NOC
	
97  Korea, South  KOR
________________________________________________________
INSTRUCTION:

1. Create the DataFrame hosts by doing a left join on 
   DataFrames editions and ioc_codes (using pd.merge()).
2. Clean up hosts by subsetting and setting the Index.
3. Extract the columns 'Edition' and 'NOC'.
   - Set 'Edition' column as the Index.
   - Use the .loc[] accessor to find and assign the 
     missing values to the 'NOC' column in hosts. 
     This has been done for you.
4. Reset the index of hosts using .reset_index(), which 
   you'll need to save as the hosts DataFrame.
5. Hit 'Submit Answer' to see what hosts looks like!
________________________________________________________
GUIDE:

Building hosts DataFrame
Your task here is to prepare a DataFrame hosts by left 
joining editions and ioc_codes.

Once created, you will subset the Edition and NOC columns 
and set Edition as the Index.

There are some missing NOC values; you will set those 
explicitly.

Finally, you'll reset the Index & print the final DataFrame.
________________________________________________________
DATA SOURCE:

https://www.theguardian.com/sport/datablog/2012/jun/25/olympic-medal-winner-list-datahttp://pandas.pydata.org/pandas-docs/stable/user_guide/computation.html
________________________________________________________
