import pandas as pd

# Create the list of DataFrames: medal_list
medal_list = [bronze, silver, gold]

# Concatenate medal_list horizontally using an inner join: medals
medals = pd.concat(medal_list, keys=['bronze', 'silver', 'gold'], axis=1, join='inner')

# Print medals
print(medals)

#Using regular expresions, format default numbers
# Configuramos separadores de miles y 0 decimales
pd.options.display.float_format = '{:,.0f}'.format 
print(medals)
________________________________________________________
OUT:	
	                bronze  silver    gold
	                 Total   Total   Total
	Country                               
	United States  1,052.0 1,195.0 2,088.0
	Soviet Union     584.0   627.0   838.0
	United Kingdom   505.0   591.0   498.0

	               bronze silver  gold
	                Total  Total Total
	Country                           
	United States   1,052  1,195 2,088
	Soviet Union      584    627   838
	United Kingdom    505    591   498
________________________________________________________
IPYTHONSHELL:
BEFORE EXECUTE THE EXCERCISE:
In [1]: bronze.shape, silver.shape, gold.shape
Out[1]: ((5, 1), (5, 1), (5, 1))

In [2]: bronze, silver, gold
Out[2]: 
	(                 Total
	 Country               
	 United States   1052.0
	 Soviet Union     584.0
	 United Kingdom   505.0
	 France           475.0
	 Germany          454.0,
	                  Total
	 Country               
	 United States   1195.0
	 Soviet Union     627.0
	 United Kingdom   591.0
	 France           461.0
	 Italy            394.0,
	                  Total
	 Country               
	 United States   2088.0
	 Soviet Union     838.0
	 United Kingdom   498.0
	 Italy            460.0
	 Germany          407.0)

AFTER EXECUTE THE EXCERCISE:

________________________________________________________
INSTRUCTION:

1. Construct a list of DataFrames called medal_list with entries 
   bronze, silver, and gold.
2. Concatenate medal_list horizontally with an inner join to create 
   medals.
   - Use the keyword argument keys=['bronze', 'silver', 'gold'] to 
     yield suitable hierarchical indexing.
   - Use axis=1 to get horizontal concatenation.
   - Use join='inner' to keep only rows that share common index 
     labels.
3. Print the new DataFrame medals.
________________________________________________________
GUIDE:

Concatenating DataFrames with inner join
Here, you'll continue working with DataFrames compiled from 
The Guardian's Olympic medal dataset.

The DataFrames bronze, silver, and gold have been pre-loaded 
for you.

Your task is to compute an inner join.
________________________________________________________
DATA SOURCE:

https://www.theguardian.com/sport/datablog/2012/jun/25/olympic-medal-winner-list-data
________________________________________________________
