# Merge revenue & managers on 'city' & 'branch': combined
combined = pd.merge(revenue, managers, left_on="city", right_on="branch")

# Print combined
print(combined)
________________________________________________________
OUT:	
	          city  branch_id_x state_x  revenue       branch  branch_id_y state_y   manager
	0       Austin           10      TX      100       Austin           10      TX  Charlers
	1       Denver           20      CO       83       Denver           20      CO      Joel
	2  Springfield           30      IL        4  Springfield           31      MO     Sally
	3    Mendocino           47      CA      200    Mendocino           47      CA     Brett
________________________________________________________
IPYTHONSHELL:
BEFORE EXECUTE THE EXCERCISE:
In [1]: revenue.shape, managers.shape
Out[1]: ((4, 4), (4, 4))

In [2]: revenue, managers
Out[2]: 
	(          city  branch_id state  revenue
	 0       Austin         10    TX      100
	 1       Denver         20    CO       83
	 2  Springfield         30    IL        4
	 3    Mendocino         47    CA      200,

	         branch  branch_id state   manager
	 0       Austin         10    TX  Charlers
	 1       Denver         20    CO      Joel
	 2    Mendocino         47    CA     Brett
	 3  Springfield         31    MO     Sally)

AFTER EXECUTE THE EXCERCISE:

________________________________________________________
INSTRUCTION:

1. Merge the DataFrames revenue and managers into a single 
   DataFrame called combined using the 'city' and 'branch' 
   columns from the appropriate DataFrames.
   - In your call to pd.merge(), you will have to specify 
     the parameters left_on and right_on appropriately.
3. Print the new DataFrame combined.
________________________________________________________
GUIDE:

Merging on columns with non-matching labels
You continue working with the revenue & managers DataFrames 
from before. This time, someone has changed the field name 
'city' to 'branch' in the managers table. Now, when you attempt 
to merge DataFrames, an exception is thrown:

	>>> pd.merge(revenue, managers, on='city')
	    Traceback (most recent call last):
	        ... <text deleted> ...
	        pd.merge(revenue, managers, on='city')
	        ... <text deleted> ...
	    KeyError: 'city'

Given this, it will take a bit more work for you to join or 
merge on the city/branch name. You have to specify the left_on 
and right_on parameters in the call to pd.merge().

As before, pandas has been pre-imported as pd and the revenue 
and managers DataFrames are in your namespace. They have been 
printed in the IPython Shell so you can examine the columns 
prior to merging.

	          city  branch_id state  revenue
	0       Austin         10    TX      100
	1       Denver         20    CO       83
	2  Springfield         30    IL        4
	3    Mendocino         47    CA      200
	
	        branch  branch_id state   manager
	0       Austin         10    TX  Charlers
	1       Denver         20    CO      Joel
	2    Mendocino         47    CA     Brett
	3  Springfield         31    MO     Sally

Are you able to merge better than in the last exercise? How 
should the rows with Springfield be handled?
________________________________________________________
