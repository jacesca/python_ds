import pandas as pd

# Construct the pivot_table: medal_counts
medal_counts = medals.pivot_table(index="Edition", columns="NOC", values="Athlete", aggfunc="count")

# Print the first & last 5 rows of medal_counts
print(medal_counts.head())
print(medal_counts.tail())
________________________________________________________
OUT:	
	NOC      AFG  AHO  ALG   ANZ  ARG  ...  VIE  YUG  ZAM  ZIM   ZZX
	Edition                            ...                          
	1896     NaN  NaN  NaN   NaN  NaN  ...  NaN  NaN  NaN  NaN   6.0
	1900     NaN  NaN  NaN   NaN  NaN  ...  NaN  NaN  NaN  NaN  34.0
	1904     NaN  NaN  NaN   NaN  NaN  ...  NaN  NaN  NaN  NaN   8.0
	1908     NaN  NaN  NaN  19.0  NaN  ...  NaN  NaN  NaN  NaN   NaN
	1912     NaN  NaN  NaN  10.0  NaN  ...  NaN  NaN  NaN  NaN   NaN
	[5 rows x 138 columns]


	NOC      AFG  AHO  ALG  ANZ   ARG  ...  VIE   YUG  ZAM  ZIM  ZZX
	Edition                            ...                          
	1992     NaN  NaN  2.0  NaN   2.0  ...  NaN   NaN  NaN  NaN  NaN
	1996     NaN  NaN  3.0  NaN  20.0  ...  NaN  26.0  1.0  NaN  NaN
	2000     NaN  NaN  5.0  NaN  20.0  ...  1.0  26.0  NaN  NaN  NaN
	2004     NaN  NaN  NaN  NaN  47.0  ...  NaN   NaN  NaN  3.0  NaN
	2008     1.0  NaN  2.0  NaN  51.0  ...  1.0   NaN  NaN  4.0  NaN
	[5 rows x 138 columns]
________________________________________________________
IPYTHONSHELL:
BEFORE EXECUTE THE EXCERCISE:
In [1]: medals.shape
	Out[1]: (29216, 4)

In [2]: medals.head()
	Out[2]: 
	  	            Athlete  NOC   Medal  Edition
	0 	      HAJOS, Alfred  HUN    Gold     1896
	1    	   HERSCHMANN, Otto  AUT  Silver     1896
	2 	  DRIVAS, Dimitrios  GRE  Bronze     1896
	3  	 MALOKINIS, Ioannis  GRE    Gold     1896
	4        CHASAPIS, Spiridon  GRE  Silver     1896

In [3]: medals.tail()
	Out[3]: 
	                    Athlete  NOC   Medal  Edition
	29211        ENGLICH, Mirko  GER  Silver     2008
	29212  MIZGAITIS, Mindaugas  LTU  Bronze     2008
	29213       PATRIKEEV, Yuri  ARM  Bronze     2008
	29214         LOPEZ, Mijain  CUB    Gold     2008
	29215        BAROEV, Khasan  RUS  Silver     2008

In [4]: medals.info()
	<class 'pandas.core.frame.DataFrame'>
	RangeIndex: 29216 entries, 0 to 29215
	Data columns (total 4 columns):
	Athlete    29216 non-null object
	NOC        29216 non-null object
	Medal      29216 non-null object
	Edition    29216 non-null int64
	dtypes: int64(1), object(3)
	memory usage: 913.1+ KB

In [5]: medals.columns
	Out[5]: Index(['Athlete', 'NOC', 'Medal', 'Edition'], dtype='object')

In [6]: medals.index
	Out[6]: RangeIndex(start=0, stop=29216, step=1)

AFTER EXECUTE THE EXCERCISE:

________________________________________________________
INSTRUCTION:

1. Construct a pivot table from the DataFrame medals, 
   aggregating by count (by specifying the aggfunc 
   parameter). Use 'Edition' as the index, 'Athlete' for 
   the values, and 'NOC' for the columns.
2. Print the first & last 5 rows of medal_counts. This 
   has been done for you, so hit 'Submit Answer' to see 
   the results!
________________________________________________________
GUIDE:

Counting medals by country/edition in a pivot table

Here, you'll start with the concatenated DataFrame medals 
from the previous exercise.

You can construct a pivot table to see the number of medals 
each country won in each year. The result is a new DataFrame 
with the Olympic edition on the Index and with 138 country 
NOC codes as columns. If you want a refresher on pivot tables, 
it may be useful to refer back to the relevant exercises in 
Manipulating DataFrames with pandas.
________________________________________________________
DATA SOURCE:

https://www.theguardian.com/sport/datablog/2012/jun/25/olympic-medal-winner-list-data
________________________________________________________
