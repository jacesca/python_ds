# Print the median of the dry_bulb_faren column
print(df_clean.dry_bulb_faren.median())

# Print the median of the dry_bulb_faren column for the time range '2011-Apr':'2011-Jun'
print(df_clean.loc["2011-Apr":"2011-Jun", 'dry_bulb_faren'].median())

# Print the median of the dry_bulb_faren column for the month of January
print(df_clean.loc["2011-Jan", "dry_bulb_faren"].median())
________________________________________________________
OUT:
72.0

78.0

48.0
________________________________________________________
IPYTHONSHELL:
In [1]: type(df_clean)
	Out[1]: pandas.core.frame.DataFrame

In [2]: df_clean.shape
	Out[2]: (10337, 17)

In [3]: df_clean.head()
	Out[3]: 
	                      Wban      date    Time  StationType sky_condition  ... relative_humidity  wind_speed wind_direction station_pressure sea_level_pressure
	2011-01-01 00:53:00  13904  20110101  005300           12        OVC045  ...                24        15.0            360            29.42              29.95
	2011-01-01 01:53:00  13904  20110101  015300           12        OVC049  ...                23        10.0            340            29.49              30.01
	2011-01-01 02:53:00  13904  20110101  025300           12        OVC060  ...                22        15.0            010            29.49              30.01
	2011-01-01 03:53:00  13904  20110101  035300           12        OVC065  ...                27         7.0            350            29.51              30.03
	2011-01-01 04:53:00  13904  20110101  045300           12        BKN070  ...                25        11.0            020            29.51              30.04
	[5 rows x 17 columns]

In [4]: df_clean.tail()
	Out[4]: 
	                      Wban      date    Time  StationType sky_condition  ... relative_humidity  wind_speed wind_direction station_pressure sea_level_pressure
	2011-12-31 19:53:00  13904  20111231  195300           12           CLR  ...                69         5.0            200            29.49              30.03
	2011-12-31 20:53:00  13904  20111231  205300           12           CLR  ...                80         0.0            000            29.52              30.05
	2011-12-31 21:53:00  13904  20111231  215300           12           CLR  ...                80         0.0            000            29.53              30.06
	2011-12-31 22:53:00  13904  20111231  225300           12           CLR  ...                83         3.0            150            29.56              30.09
	2011-12-31 23:53:00  13904  20111231  235300           12           CLR  ...                93         3.0            260            29.59              30.11
	[5 rows x 17 columns]

In [5]: df_clean.info()
	<class 'pandas.core.frame.DataFrame'>
	DatetimeIndex: 10337 entries, 2011-01-01 00:53:00 to 2011-12-31 23:53:00
	Data columns (total 17 columns):
	Wban                  10337 non-null int64
	date                  10337 non-null object
	Time                  10337 non-null object
	StationType           10337 non-null int64
	sky_condition         10337 non-null object
	visibility            10325 non-null object
	dry_bulb_faren        10326 non-null float64
	dry_bulb_cel          10337 non-null object
	wet_bulb_faren        10337 non-null object
	wet_bulb_cel          10337 non-null object
	dew_point_faren       10323 non-null float64
	dew_point_cel         10337 non-null object
	relative_humidity     10337 non-null object
	wind_speed            10318 non-null float64
	wind_direction        10337 non-null object
	station_pressure      10337 non-null object
	sea_level_pressure    10337 non-null object
	dtypes: float64(3), int64(2), object(12)
	memory usage: 1.7+ MB

In [6]: df_clean["dry_bulb_faren"].head()
	Out[6]: 
	2011-01-01 00:53:00    51.0
	2011-01-01 01:53:00    51.0
	2011-01-01 02:53:00    51.0
	2011-01-01 03:53:00    50.0
	2011-01-01 04:53:00    50.0
	Name: dry_bulb_faren, dtype: float64

In [8]: df_clean["dry_bulb_faren"].tail()
	Out[8]: 
	2011-12-31 19:53:00    56.0
	2011-12-31 20:53:00    50.0
	2011-12-31 21:53:00    51.0
	2011-12-31 22:53:00    51.0
	2011-12-31 23:53:00    46.0
	Name: dry_bulb_faren, dtype: float6
________________________________________________________
INSTRUCTION:
1. Select the 'dry_bulb_faren' column and print the 
   output of .median().
2. Use .loc[] to select the range '2011-Apr':'2011-Jun' 
   from dry_bulb_faren' and print the output of 
   .median().
3. Use .loc[] to select the month '2011-Jan' from 
   'dry_bulb_faren' and print the output of .median().
________________________________________________________
GUIDE:
Cleaning the numeric columns
The numeric columns contain missing values labeled as 
'M'. In this exercise, your job is to transform these 
columns such that they contain only numeric values and 
interpret missing data as NaN.

The pandas function pd.to_numeric() is ideal for this 
purpose: It converts a Series of values to 
floating-point values. Furthermore, by specifying the 
keyword argument errors='coerce', you can force strings 
like 'M' to be interpreted as NaN.

A DataFrame df_clean is provided for you at the start 
of the exercise, and as usual, pandas has been 
imported as pd.
________________________________________________________
