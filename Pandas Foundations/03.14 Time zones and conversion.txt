# Build a Boolean mask to filter out all the 'LAX' departure flights: mask
mask = df['Destination Airport'] == "LAX"

# Use the mask to subset the data: la
la = df[mask]
print("*** la ***")
print(type(la))
print(la.shape)
print(la.head())

# Combine two columns of data to create a datetime series: times_tz_none 
times_tz_none = pd.to_datetime( la["Date (MM/DD/YYYY)"] + ' ' + la["Wheels-off Time"] )
print("\n*** times_tz_none ***")
print(type(times_tz_none))
print(times_tz_none.shape)
print(times_tz_none.head())

# Localize the time to US/Central: times_tz_central
times_tz_central = times_tz_none.dt.tz_localize("US/Central")
print("\n*** times_tz_central ***")
print(type(times_tz_central))
print(times_tz_central.shape)
print(times_tz_central.head())

# Convert the datetimes from US/Central to US/Pacific
times_tz_pacific = times_tz_central.dt.tz_convert("US/Pacific")
print("\n*** times_tz_pacific ***")
print(type(times_tz_pacific))
print(times_tz_pacific.shape)
print(times_tz_pacific.head())
________________________________________________________
OUT:
	*** la ***
	<class 'pandas.core.frame.DataFrame'>
	(62, 18)
	    Carrier Code Date (MM/DD/YYYY)  Flight Number Tail Number Destination Airport  ... DelayWeather(Minutes) DelayNational Aviation System(Minutes)  DelaySecurity(Minutes)  \
	33            WN        07/01/2015         1249.0      N430WN                 LAX  ...                   0.0                                    0.0                     0.0   
	55            WN        07/01/2015         4924.0      N757LV                 LAX  ...                   0.0                                    0.0                     0.0   
	91            WN        07/02/2015         1249.0      N570WN                 LAX  ...                   0.0                                    0.0                     0.0   
	113           WN        07/02/2015         4924.0      N379SW                 LAX  ...                   0.0                                    0.0                     0.0   
	134           WN        07/03/2015         1249.0      N487WN                 LAX  ...                   0.0                                    0.0                     0.0   

	     DelayLate Aircraft Arrival(Minutes)  Unnamed: 17  
	33                                   0.0          NaN  
	55                                   0.0          NaN  
	91                                   0.0          NaN  
	113                                  0.0          NaN  
	134                                  0.0          NaN  
	[5 rows x 18 columns]

	*** times_tz_none ***
	<class 'pandas.core.series.Series'>
	(62,)
	33    2015-07-01 05:43:00
	55    2015-07-01 16:27:00
	91    2015-07-02 05:47:00
	113   2015-07-02 16:23:00
	134   2015-07-03 05:30:00
	dtype: datetime64[ns]

	*** times_tz_central ***
	<class 'pandas.core.series.Series'>
	(62,)
	33    2015-07-01 05:43:00-05:00
	55    2015-07-01 16:27:00-05:00
	91    2015-07-02 05:47:00-05:00
	113   2015-07-02 16:23:00-05:00
	134   2015-07-03 05:30:00-05:00
	dtype: datetime64[ns, US/Central]

	*** times_tz_pacific ***
	<class 'pandas.core.series.Series'>
	(62,)
	33    2015-07-01 03:43:00-07:00
	55    2015-07-01 14:27:00-07:00
	91    2015-07-02 03:47:00-07:00
	113   2015-07-02 14:23:00-07:00
	134   2015-07-03 03:30:00-07:00
	dtype: datetime64[ns, US/Pacific]
________________________________________________________
IPYTHONSHELL:
In [1]: type(df)
	Out[1]: pandas.core.frame.DataFrame

In [2]: df.shape
	Out[2]: (1741, 18)

In [3]: df.info()
	<class 'pandas.core.frame.DataFrame'>
	RangeIndex: 1741 entries, 0 to 1740
	Data columns (total 18 columns):
	Carrier Code                              1741 non-null object
	Date (MM/DD/YYYY)                         1740 non-null object
	Flight Number                             1740 non-null float64
	Tail Number                               1740 non-null object
	Destination Airport                       1740 non-null object
	Scheduled Departure Time                  1740 non-null object
	Actual Departure Time                     1740 non-null object
	Scheduled Elapsed Time(Minutes)           1740 non-null float64
	Actual Elapsed Time(Minutes)              1740 non-null float64
	Departure Delay(Minutes)                  1740 non-null float64
	Wheels-off Time                           1740 non-null object
	Taxi-out Time(Minutes)                    1740 non-null float64
	DelayCarrier(Minutes)                     1740 non-null float64
	DelayWeather(Minutes)                     1740 non-null float64
	DelayNational Aviation System(Minutes)    1740 non-null float64
	DelaySecurity(Minutes)                    1740 non-null float64
	DelayLate Aircraft Arrival(Minutes)       1740 non-null float64
	Unnamed: 17                               0 non-null float64
	dtypes: float64(11), object(7)
	memory usage: 244.9+ KB

In [4]: df.head()
	Out[4]: 
	  Carrier Code Date (MM/DD/YYYY)  Flight Number Tail Number Destination Airport  ... DelayWeather(Minutes) DelayNational Aviation System(Minutes)  DelaySecurity(Minutes)  \
	0           WN        07/01/2015          103.0      N8607M                 MDW  ...                   0.0                                    0.0                     0.0   
	1           WN        07/01/2015          144.0      N8609A                 SAN  ...                   0.0                                    0.0                     0.0   
	2           WN        07/01/2015          178.0      N646SW                 ELP  ...                   0.0                                    0.0                     0.0   
	3           WN        07/01/2015          232.0      N204WN                 ATL  ...                   0.0                                    0.0                     0.0   
	4           WN        07/01/2015          238.0      N233LV                 DAL  ...                   0.0                                    0.0                     0.0   
	
	   DelayLate Aircraft Arrival(Minutes)  Unnamed: 17  
	0                                  0.0          NaN  
	1                                  0.0          NaN  
	2                                  0.0          NaN  
	3                                  0.0          NaN  
	4                                  0.0          NaN  
	[5 rows x 18 columns]

In [5]: df.tail()
	Out[5]: 
	                                       Carrier Code Date (MM/DD/YYYY)  Flight Number Tail Number Destination Airport  ... DelayWeather(Minutes) DelayNational Aviation System(Minutes)  \
	1736                                             WN        07/31/2015         4913.0      N622SW                 TPA  ...                   0.0                                    0.0   
	1737                                             WN        07/31/2015         4924.0      N910WN                 LAX  ...                   0.0                                    0.0   
	1738                                             WN        07/31/2015         4927.0      N8327A                 DCA  ...                   0.0                                    0.0   
	1739                                             WN        07/31/2015         5888.0      N290WN                 DAL  ...                   0.0                                    0.0   
	1740    SOURCE: Bureau of Transportation Statistics               NaN            NaN         NaN                 NaN  ...                   NaN                                    NaN   

	      DelaySecurity(Minutes)  DelayLate Aircraft Arrival(Minutes)  Unnamed: 17  
	1736                     0.0                                  0.0          NaN  
	1737                     0.0                                 36.0          NaN  
	1738                     0.0                                 48.0          NaN  
	1739                     0.0                                 58.0          NaN  
	1740                     NaN                                  NaN          NaN  
	[5 rows x 18 columns]

In [6]: df.columns
	Out[6]: 
	Index(['Carrier Code', 
	       'Date (MM/DD/YYYY)', 
	       'Flight Number', 
	       'Tail Number', 
	       'Destination Airport', 
	       'Scheduled Departure Time', 
	       'Actual Departure Time', 
	       'Scheduled Elapsed Time(Minutes)',
	       'Actual Elapsed Time(Minutes)', 
	       'Departure Delay(Minutes)', 
	       'Wheels-off Time', 
	       'Taxi-out Time(Minutes)', 
	       'DelayCarrier(Minutes)', 
	       'DelayWeather(Minutes)',
	       'DelayNational Aviation System(Minutes)', 
	       'DelaySecurity(Minutes)', 
	       'DelayLate Aircraft Arrival(Minutes)', 
	       'Unnamed: 17'],
	      dtype='object')
________________________________________________________
INSTRUCTION:
1. Create a Boolean mask, mask, such that if the 
   'Destination Airport' column of df equals 'LAX', 
   the result is True, and otherwise, it is False.
2. Use the mask to extract only the LAX rows. Assign 
   the result to la.
3. Concatenate the two columns la['Date (MM/DD/YYYY)'] 
   and la['Wheels-off Time'] with a ' ' space in 
   between. Pass this to pd.to_datetime() to create a 
   datetime array of all the times the LAX-bound flights 
   left the ground.
4. Use Series.dt.tz_localize() to localize the time to 
   'US/Central'.
5. Use the .dt.tz_convert() method to convert datetimes 
   from 'US/Central' to 'US/Pacific'.
________________________________________________________
GUIDE:
Time zones and conversion
Time zone handling with pandas typically assumes that 
you are handling the Index of the Series. In this 
exercise, you will learn how to handle timezones that 
are associated with datetimes in the column data, and 
not just the Index.

You will work with the flight departure dataset again, 
and this time you will select Los Angeles ('LAX') as 
the destination airport.

Here we will use a mask to ensure that we only compute 
on data we actually want. To learn more about Boolean 
masks, click here!
________________________________________________________
