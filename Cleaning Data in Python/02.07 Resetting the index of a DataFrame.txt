print(airquality_pivot.keys())
print(airquality_pivot.head())

# Print the index of airquality_pivot
print(airquality_pivot.index)

# Reset the index of airquality_pivot: airquality_pivot_reset
airquality_pivot_reset = airquality_pivot.reset_index()

# Print the new index of airquality_pivot_reset
print(airquality_pivot_reset.index)

# Print the head of airquality_pivot_reset
print(airquality_pivot_reset.head())
print(airquality_pivot_reset.keys())
________________________________________________________
OUT:
Index(['Ozone', 'Solar.R', 'Temp', 'Wind'], 
      dtype='object', name='measurement')


measurement  Ozone  Solar.R  Temp  Wind
Month Day                              
5     1       41.0    190.0  67.0   7.4
      2       36.0    118.0  72.0   8.0
      3       12.0    149.0  74.0  12.6
      4       18.0    313.0  62.0  11.5
      5        NaN      NaN  56.0  14.3


MultiIndex(levels=[[5, 6, 7, 8, 9], 
                   [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
                    12, 13, 14, 15, 16, 17, 18, 19, 20, 
                    21, 22, 23, 24, 25, 26, 27, 28, 29, 
                    30, 31]],
           labels=[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                    0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 
                    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
                    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
                    1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
                    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
                    2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 
                    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
                    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
                    3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 
                    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 
                    4, 4, 4, 4, 4, 4, 4, 4, 4], 
                   [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
                    11, 12, 13, 14, 15, 16, 17, 18, 19, 
                    20, 21, 22, 23, 24, 25, 26, 27, 28, 
                    29, 30, 0, 1, 2, 3, 4, 5, 6, 7, 8, 
                    9, 10, 11, 12, 13, 14, 15, 16, 17, 
                    18, 19, 20, 21, 22, 23, 24, 25, 26, 
                    27, 28, 29, 0, 1, 2, 3, 4, 5, 6, 7, 
                    8, 9, 10, 11, 12, 13, 14, 15, 16, 
                    17, 18, 19, 20, 21, 22, 23, 24, 25, 
                    26, 27, 28, 29, 30, 0, 1, 2, 3, 4, 
                    5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 
                    15, 16, 17, 18, 19, 20, 21, 22, 23, 
                    24, 25, 26, 27, 28, 29, 30, 0, 1, 
                    2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 
                    13, 14, 15, 16, 17, 18, 19, 20, 21, 
                    22, 23, 24, 25, 26, 27, 28, 29]],
           names=['Month', 'Day'])


RangeIndex(start=0, stop=153, step=1)


measurement  Month  Day  Ozone  Solar.R  Temp  Wind
0                5    1   41.0    190.0  67.0   7.4
1                5    2   36.0    118.0  72.0   8.0
2                5    3   12.0    149.0  74.0  12.6
3                5    4   18.0    313.0  62.0  11.5
4                5    5    NaN      NaN  56.0  14.3


Index(['Month', 'Day', 'Ozone', 'Solar.R', 'Temp', 'Wind'], dtype='object', name='measurement')
________________________________________________________
INSTRUCTION:
1. Print the index of airquality_pivot by accessing its 
   .index attribute. This has been done for you.
2. Reset the index of airquality_pivot using its 
   .reset_index() method.
3. Print the new index of airquality_pivot.
4. Print the head of airquality_pivot.
________________________________________________________
GUIDE:
Resetting the index of a DataFrame
After pivoting airquality_melt in the previous exercise, 
you didn't quite get back the original DataFrame.

What you got back instead was a pandas DataFrame with a 
hierarchical index (also known as a MultiIndex).

Hierarchical indexes are covered in depth in 
Manipulating DataFrames with pandas. In essence, 
they allow you to group columns or rows by another 
variable - in this case, by 'Month' as well as 'Day'.

There's a very simple method you can use to get back 
the original DataFrame from the pivoted DataFrame: 
.reset_index(). Dan didn't show you how to use this 
method in the video, but you're now going to practice 
using it in this exercise to get back the original 
DataFrame from airquality_pivot, which has been 
pre-loaded.
________________________________________________________
