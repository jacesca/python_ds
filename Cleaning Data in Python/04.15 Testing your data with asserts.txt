# Assert that there are no missing values
assert pd.notnull(ebola).all().all()
assert ebola.notnull().all().all()

# Assert that all values are >= 0
assert (ebola >= 0).all().all()
________________________________________________________
OUT:
________________________________________________________
IPYTHONSHELL:
In [1]: ebola.info()
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 122 entries, 0 to 121
Data columns (total 18 columns):
Date                   122 non-null object
Day                    122 non-null int64
Cases_Guinea           122 non-null float64
Cases_Liberia          122 non-null float64
Cases_SierraLeone      122 non-null float64
Cases_Nigeria          122 non-null float64
Cases_Senegal          122 non-null float64
Cases_UnitedStates     122 non-null float64
Cases_Spain            122 non-null float64
Cases_Mali             122 non-null float64
Deaths_Guinea          122 non-null float64
Deaths_Liberia         122 non-null float64
Deaths_SierraLeone     122 non-null float64
Deaths_Nigeria         122 non-null float64
Deaths_Senegal         122 non-null float64
Deaths_UnitedStates    122 non-null float64
Deaths_Spain           122 non-null float64
Deaths_Mali            122 non-null float64
dtypes: float64(16), int64(1), object(1)
memory usage: 17.2+ KB

In [2]: ebola.head()
Out[2]: 
         Date  Day  Cases_Guinea  Cases_Liberia  Cases_SierraLeone     ...       Deaths_Nigeria  Deaths_Senegal  Deaths_UnitedStates  Deaths_Spain  Deaths_Mali
0    1/5/2015  289        2776.0            0.0            10030.0     ...                  0.0             0.0                  0.0           0.0          0.0
1    1/4/2015  288        2775.0            0.0             9780.0     ...                  0.0             0.0                  0.0           0.0          0.0
2    1/3/2015  287        2769.0         8166.0             9722.0     ...                  0.0             0.0                  0.0           0.0          0.0
3    1/2/2015  286           0.0         8157.0                0.0     ...                  0.0             0.0                  0.0           0.0          0.0
4  12/31/2014  284        2730.0         8115.0             9633.0     ...                  0.0             0.0                  0.0           0.0          0.0

[5 rows x 18 columns]
________________________________________________________
INSTRUCTION:
1. Write an assert statement to confirm that there are 
   no missing values in ebola.
   * Use the pd.notnull() function on ebola (or the 
     .notnull() method of ebola) and chain two .all() 
     methods (that is, .all().all()). The first .all() 
     method will return a True or False for each column, 
   while the second .all() method will return a single 
   True or False.
2. Write an assert statement to confirm that all values 
   in ebola are greater than or equal to 0.
   * Chain two all() methods to the Boolean condition 
     (ebola >= 0).
________________________________________________________
GUIDE:
Testing your data with asserts
Here, you'll practice writing assert statements using 
the Ebola dataset from previous chapters to 
programmatically check for missing values and to confirm 
that all values are positive. The dataset has been 
pre-loaded into a DataFrame called ebola.

In the video, you saw Dan use the .all() method 
together with the .notnull() DataFrame method to check 
for missing values in a column. The .all() method 
returns True if all values are True. When used on a 
DataFrame, it returns a Series of Booleans - one for 
each column in the DataFrame. So if you are using it 
on a DataFrame, like in this exercise, you need to 
chain another .all() method so that you return only one 
True or False value. When using these within an assert 
statement, nothing will be returned if the assert 
statement is true: This is how you can confirm that the 
data you are checking are valid.
________________________________________________________
