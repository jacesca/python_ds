# Create the new DataFrame: tracks
tracks = billboard[["year","artist","track","time"]]

# Print info of tracks
print(tracks.info())

# Drop the duplicates: tracks_no_duplicates
tracks_no_duplicates = tracks.drop_duplicates()

# Print info of tracks
print(tracks_no_duplicates.info())
________________________________________________________
OUT:
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 24092 entries, 0 to 24091
Data columns (total 4 columns):
year      24092 non-null int64
artist    24092 non-null object
track     24092 non-null object
time      24092 non-null object
dtypes: int64(1), object(3)
memory usage: 753.0+ KB
None

<class 'pandas.core.frame.DataFrame'>
Int64Index: 317 entries, 0 to 316
Data columns (total 4 columns):
year      317 non-null int64
artist    317 non-null object
track     317 non-null object
time      317 non-null object
dtypes: int64(1), object(3)
memory usage: 12.4+ KB
None
________________________________________________________
IPYTHONSHELL:
In [1]: billboard.shape
Out[1]: (24092, 7)

In [2]: billboard.info()
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 24092 entries, 0 to 24091
Data columns (total 7 columns):
year            24092 non-null int64
artist          24092 non-null object
track           24092 non-null object
time            24092 non-null object
date.entered    24092 non-null object
week            24092 non-null object
rank            5307 non-null float64
dtypes: float64(1), int64(1), object(5)
memory usage: 1.3+ MB
________________________________________________________
INSTRUCTION:
1. Create a new DataFrame called tracks that contains 
   the following columns from billboard: 'year', 
   'artist', 'track', and 'time'.
2. Print the info of tracks. This has been done for you.
3. Drop duplicate rows from tracks using the 
   .drop_duplicates() method. Save the result to 
   tracks_no_duplicates.
4. Print the info of tracks_no_duplicates. This has 
   been done for you, so hit 'Submit Answer' to see 
   the results!
________________________________________________________
GUIDE:
Dropping duplicate data
Duplicate data causes a variety of problems. From the 
point of view of performance, they use up unnecessary 
amounts of memory and cause unneeded calculations to 
be performed when processing data. In addition, they 
can also bias any analysis results.

A dataset consisting of the performance of songs on the 
Billboard charts has been pre-loaded into a DataFrame 
called billboard. Check out its columns in the IPython 
Shell. Your job in this exercise is to subset this 
DataFrame and then drop all duplicate rows.
________________________________________________________
