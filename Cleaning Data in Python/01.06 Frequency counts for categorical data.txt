# Print the value counts for 'Borough'
print(df['Borough'].value_counts(dropna=False))

# Print the value_counts for 'State'
print(df["State"].value_counts(dropna=False))

# Print the value counts for 'Site Fill'
print(df["Site Fill"].value_counts(dropna=False))
________________________________________________________
OUT:
MANHATTAN        6310
BROOKLYN         2866
QUEENS           2121
BRONX             974
STATEN ISLAND     575
Name: Borough, dtype: int64


NY    12391
NJ      241
PA       38
CA       20
OH       19
IL       17
FL       17
CT       16
TX       13
TN       10
MD        7
DC        7
MA        6
KS        6
GA        6
VA        5
CO        4
SC        3
AZ        3
MN        3
WI        3
NC        2
RI        2
UT        2
WA        1
NM        1
VT        1
MI        1
IN        1
Name: State, dtype: int64


NOT APPLICABLE                              7806
NaN                                         4205
ON-SITE                                      519
OFF-SITE                                     186
USE UNDER 300 CU.YD                          130
Name: Site Fill, dtype: int64
________________________________________________________
INSTRUCTION:
1. Print the value counts for:
   * The 'Borough' column.
   * The 'State' column.
   * The 'Site Fill' column.
________________________________________________________
GUIDE:
Frequency counts for categorical data
As you've seen, .describe() can only be used on numeric 
columns. So how can you diagnose data issues when you 
have categorical data? One way is by using the 
.value_counts() method, which returns the frequency 
counts for each unique value in a column!

This method also has an optional parameter called 
dropna which is True by default. What this means is 
if you have missing data in a column, it will not 
give a frequency count of them. You want to set the 
dropna column to False so if there are missing values 
in a column, it will give you the frequency counts.

In this exercise, you're going to look at the 'Borough', 
'State', and 'Site Fill' columns to make sure all the 
values in there are valid. When looking at the output, 
do a sanity check: Are all values in the 'State' column 
from NY, for example? Since the dataset consists of 
applications filed in NY, you would expect this to be 
the case.
________________________________________________________
