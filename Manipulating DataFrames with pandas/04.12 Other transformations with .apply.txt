import pandas as pd

def disparity(gr):
    # Compute the spread of gr['gdp']: s
    s = gr['gdp'].max() - gr['gdp'].min()
    # Compute the z-score of gr['gdp'] as (gr['gdp']-gr['gdp'].mean())/gr['gdp'].std(): z
    z = (gr['gdp'] - gr['gdp'].mean())/gr['gdp'].std()
    # Return a DataFrame with the inputs {'z(gdp)':z, 'regional spread(gdp)':s}
    return pd.DataFrame({'z(gdp)':z , 'regional spread(gdp)':s})

# Group gapminder_2010 by 'region': regional
regional = gapminder_2010.groupby("region")

# Apply the disparity function on regional: reg_disp
reg_disp = regional.apply(disparity)

# Print the disparity of 'United States', 'United Kingdom', and 'China'
#print(reg_disp.loc[["United States","United Kingdom","China"]])
print(reg_disp.loc[["United States","United Kingdom","China","El Salvador"]])
________________________________________________________
OUT:
	                  z(gdp)  regional spread(gdp)
	Country                                       
	United States   3.013374               47855.0
	United Kingdom  0.572873               89037.0
	China          -0.432756               96993.0
	El Salvador    -0.763594               47855.0
________________________________________________________
IPYTHONSHELL:

In [1]: gapminder_2010.shape
	Out[1]: (202, 6)

In [2]: gapminder_2010.head()
	Out[2]: 
	                     fertility    life  population  child_mortality      gdp                      region
	Country                                                                                                 
	Afghanistan              5.659  59.612  31411743.0            105.0   1637.0                  South Asia
	Albania                  1.741  76.780   3204284.0             16.6   9374.0       Europe & Central Asia
	Algeria                  2.817  70.615  35468208.0             27.4  12494.0  Middle East & North Africa
	Angola                   6.218  50.689  19081912.0            182.5   7047.0          Sub-Saharan Africa
	Antigua and Barbuda      2.130  75.437     88710.0              9.9  20567.0                     America

In [3]: gapminder_2010.tail()
	Out[3]: 
	                    fertility    life  population  child_mortality     gdp                      region
	Country                                                                                               
	West Bank and Gaza      4.216  72.640   4039192.0            23.80  4163.0  Middle East & North Africa
	Western Sahara          2.471  66.844    530500.0            50.71     NaN  Middle East & North Africa
	Yemen, Rep.             4.498  62.536  24052514.0              NaN     NaN  Middle East & North Africa
	Zambia                  5.813  54.549  13088570.0            84.80  3451.0          Sub-Saharan Africa
	Zimbabwe                3.721  53.684  12571454.0            95.10  1484.0          Sub-Saharan Africa

In [4]: gapminder_2010.info()
	<class 'pandas.core.frame.DataFrame'>
	Index: 202 entries, Afghanistan to Zimbabwe
	Data columns (total 6 columns):
	fertility          202 non-null float64
	life               202 non-null float64
	population         202 non-null float64
	child_mortality    189 non-null float64
	gdp                180 non-null float64
	region             202 non-null object
	dtypes: float64(5), object(1)
	memory usage: 21.0+ KB
________________________________________________________
INSTRUCTION:

1. Group gapminder_2010 by 'region'. Save the result as 
   regional.
2. Apply the provided disparity function on regional, 
   and save the result as reg_disp.
3. Use .loc[] to 
   select ['United States','United Kingdom','China'] 
   from reg_disp and print the results.
________________________________________________________
GUIDE:

Other transformations with .apply

The .apply() method when used on a groupby object 
performs an arbitrary function on each of the groups. 
These functions can be aggregations, transformations or 
more complex workflows. The .apply() method will then 
combine the results in an intelligent way.

In this exercise, you're going to analyze economic 
disparity within regions of the world using the Gapminder 
data set for 2010. To do this you'll define a function to 
compute the aggregate spread of per capita GDP in each 
region and the individual country's z-score of the 
regional per capita GDP. You'll then select three 
countries - United States, Great Britain and China - 
to see a summary of the regional GDP and that country's 
z-score against the regional mean.

The 2010 Gapminder DataFrame is provided for you as 
gapminder_2010. Pandas has been imported as pd.

The following function has been defined for your use:

	def disparity(gr):
	    # Compute the spread of gr['gdp']: s
	    s = gr['gdp'].max() - gr['gdp'].min()

	    # Compute the z-score of gr['gdp'] as (gr['gdp']-gr['gdp'].mean())/gr['gdp'].std(): z
	    z = (gr['gdp'] - gr['gdp'].mean())/gr['gdp'].std()

	    # Return a DataFrame with the inputs {'z(gdp)':z, 'regional spread(gdp)':s}
	    return pd.DataFrame({'z(gdp)':z , 'regional spread(gdp)':s})
________________________________________________________
