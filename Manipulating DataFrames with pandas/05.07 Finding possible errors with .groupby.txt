# Group medals by the two columns: medals_by_gender
medals_by_gender = medals.groupby(["Event_gender","Gender"])

# Create a DataFrame with a group count: medal_count_by_gender
medal_count_by_gender = medals_by_gender.count()

# Print medal_count_by_gender
print(medal_count_by_gender)
________________________________________________________
OUT:	
	                      City  Edition  Sport  Discipline  Athlete    NOC  Event  Medal
	Event_gender Gender                                                                 
	M            Men     20067    20067  20067       20067    20067  20067  20067  20067
	W            Men         1        1      1           1        1      1      1      1
	             Women    7277     7277   7277        7277     7277   7277   7277   7277
	X            Men      1653     1653   1653        1653     1653   1653   1653   1653
	             Women     218      218    218         218      218    218    218    218
________________________________________________________
IPYTHONSHELL:

In [1]: medals.shape
	Out[1]: (29216, 10)

In [2]: medals.info()
	<class 'pandas.core.frame.DataFrame'>
	RangeIndex: 29216 entries, 0 to 29215
	Data columns (total 10 columns):
	City            29216 non-null object
	Edition         29216 non-null int64
	Sport           29216 non-null object
	Discipline      29216 non-null object
	Athlete         29216 non-null object
	NOC             29216 non-null object
	Gender          29216 non-null object
	Event           29216 non-null object
	Event_gender    29216 non-null object
	Medal           29216 non-null object
	dtypes: int64(1), object(9)
	memory usage: 2.2+ MB

In [3]: medals.head()
	Out[3]: 
	     City  Edition     Sport Discipline             Athlete  NOC Gender                       Event Event_gender   Medal
	0  Athens     1896  Aquatics   Swimming       HAJOS, Alfred  HUN    Men              100m freestyle            M    Gold
	1  Athens     1896  Aquatics   Swimming    HERSCHMANN, Otto  AUT    Men              100m freestyle            M  Silver
	2  Athens     1896  Aquatics   Swimming   DRIVAS, Dimitrios  GRE    Men  100m freestyle for sailors            M  Bronze
	3  Athens     1896  Aquatics   Swimming  MALOKINIS, Ioannis  GRE    Men  100m freestyle for sailors            M    Gold
	4  Athens     1896  Aquatics   Swimming  CHASAPIS, Spiridon  GRE    Men  100m freestyle for sailors            M  Silver

In [4]: medals["Gender"].unique()
	Out[4]: array(['Men', 'Women'], dtype=object)
		
In [5]: medals["Event_gender"].unique()
	Out[5]: array(['M', 'X', 'W'], dtype=object)
		
In [6]: medals.groupby("Event_gender")["Gender"].agg({"Women":lambda gr: gr[gr=="Women"].count(),"Men":lambda gr: gr[gr=="Men"].count()})
	Out[6]: 
	              Women    Men
	Event_gender              
	M                 0  20067
	W              7277      1
	X               218   1653

In [7]: medals.groupby(["Event_gender","Gender"])["Athlete"].count()
	Out[7]: 
	Event_gender  Gender
	M             Men       20067
	W             Men           1
	              Women      7277
	X             Men        1653
	              Women       218
	Name: Athlete, dtype: int64
________________________________________________________
INSTRUCTION:

1. Group medals by 'Event_gender' and 'Gender'.
2. Create a medal_count_by_gender DataFrame with a group 
   count using the .count() method.
3. Print medal_count_by_gender. This has been done for 
   you, so hit 'Submit Answer' to view the result.
________________________________________________________
GUIDE:

Finding possible errors with .groupby()

You will now use .groupby() to continue your exploration. 
Your job is to group by 'Event_gender' and 'Gender' and 
count the rows.

You will see that there is only one suspicious row: This 
is likely a data error.

The DataFrame is available to you as medals.
________________________________________________________
DATA SOURCE:

https://www.theguardian.com/sport/datablog/2012/jun/25/olympic-medal-winner-list-data
________________________________________________________
