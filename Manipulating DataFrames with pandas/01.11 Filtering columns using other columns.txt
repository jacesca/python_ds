# Import numpy
import numpy as np

# Create the boolean array: too_close
too_close = election.margin < 1

# Assign np.nan to the 'winner' column where the results were too close to call
election.winner[too_close] = np.nan

# Print the output of election.info()
print(election.info())

print(election[election.winner.isnull()])
________________________________________________________
OUT:
	<class 'pandas.core.frame.DataFrame'>
	Index: 67 entries, Adams to York
	Data columns (total 8 columns):
	state      67 non-null object
	total      67 non-null int64
	Obama      67 non-null float64
	Romney     67 non-null float64
	winner     64 non-null object
	voters     67 non-null int64
	turnout    67 non-null float64
	margin     67 non-null float64
	dtypes: float64(4), int64(2), object(2)
	memory usage: 7.2+ KB
	None

	        state   total      Obama     Romney winner  voters    turnout    margin
	county                                                                         
	Berks      PA  163253  48.939376  49.528646    NaN  250356  65.208343  0.589269
	Centre     PA   68801  48.948416  48.977486    NaN  112949  60.913333  0.029069
	Chester    PA  248295  49.228539  49.650617    NaN  337822  73.498766  0.422079	
________________________________________________________
IPYTHONSHELL:
In [1]: election.shape
	Out[1]: (67, 8)

In [2]: election.info()
	<class 'pandas.core.frame.DataFrame'>
	Index: 67 entries, Adams to York
	Data columns (total 8 columns):
	state      67 non-null object
	total      67 non-null int64
	Obama      67 non-null float64
	Romney     67 non-null float64
	winner     67 non-null object
	voters     67 non-null int64
	turnout    67 non-null float64
	margin     67 non-null float64
	dtypes: float64(4), int64(2), object(2)
	memory usage: 7.2+ KB

In [3]: election.head()
	Out[3]: 
	          state   total      Obama     Romney  winner  voters    turnout     margin
	county                                                                             
	Adams        PA   41973  35.482334  63.112001  Romney   61156  68.632677  27.629667
	Allegheny    PA  614671  56.640219  42.185820   Obama  924351  66.497575  14.454399
	Armstrong    PA   28322  30.696985  67.901278  Romney   42147  67.198140  37.204293
	Beaver       PA   80015  46.032619  52.637630  Romney  115157  69.483401   6.605012
	Bedford      PA   21444  22.057452  76.986570  Romney   32189  66.619031  54.929118
________________________________________________________
INSTRUCTION:
1. Import numpy as np.
2. Create a boolean array for the condition where the 
   'margin' column is less than 1 and assign it to 
   too_close.
3. Convert the entries in the 'winner' column where the 
   result was too close to call to np.nan.
4. Print the output of election.info(). This has been 
   done for you, so hit 'Submit Answer' to see the 
   results.
________________________________________________________
GUIDE:
Filtering columns using other columns
The election results DataFrame has a column labeled 
'margin' which expresses the number of extra votes the 
winner received over the losing candidate. This number 
is given as a percentage of the total votes cast. It is 
reasonable to assume that in counties where this margin 
was less than 1%, the results would be too-close-to-call.

Your job is to use boolean selection to filter the rows 
where the margin was less than 1. You'll then convert 
these rows of the 'winner' column to np.nan to indicate 
that these results are too close to declare a winner.

The DataFrame has been pre-loaded for you as election.
________________________________________________________
