# Set the index to the column 'state': sales
sales = sales.set_index("state")

# Print the sales DataFrame
print(sales)

# Access the data from 'NY'
print(sales.loc["NY"])
________________________________________________________
OUT:
	       month  eggs  salt  spam
	state                         
	CA         1    47  12.0    17
	CA         2   110  50.0    31
	NY         1   221  89.0    72
	NY         2    77  87.0    20
	TX         1   132   NaN    52
	TX         2   205  60.0    55

	       month  eggs  salt  spam
	state                         
	NY         1   221  89.0    72
	NY         2    77  87.0    20
________________________________________________________
IPYTHONSHELL:

In [1]: sales.shape
	Out[1]: (6, 5)

In [2]: sales
	Out[2]: 
	  state  month  eggs  salt  spam
	0    CA      1    47  12.0    17
	1    CA      2   110  50.0    31
	2    NY      1   221  89.0    72
	3    NY      2    77  87.0    20
	4    TX      1   132   NaN    52
	5    TX      2   205  60.0    55

In [3]: sales.info()
	<class 'pandas.core.frame.DataFrame'>
	RangeIndex: 6 entries, 0 to 5
	Data columns (total 5 columns):
	state    6 non-null object
	month    6 non-null int64
	eggs     6 non-null int64
	salt     5 non-null float64
	spam     6 non-null int64
	dtypes: float64(1), int64(3), object(1)
	memory usage: 320.0+ bytes

In [4]: sales.index
	Out[4]: RangeIndex(start=0, stop=6, step=1)
________________________________________________________
INSTRUCTION:
1. Set the index of sales to be the column 'state'.
2. Print the sales DataFrame to verify that indeed 
   you have an index with state values.
3. Access the data from 'NY' and print it to verify 
   that you obtain two rows.
________________________________________________________
GUIDE:
Using .loc[] with nonunique indexes
As Dhavide mentioned in the video, it is always preferable 
to have a meaningful index that uniquely identifies each 
row. Even though pandas does not require unique index values 
in DataFrames, it works better if the index values are indeed 
unique. To see an example of this, you will index your sales 
data by 'state' in this exercise.

As always, begin by printing the sales DataFrame in the 
IPython Shell and inspecting it.
________________________________________________________
