# Create the Boolean Series: sus
sus = (medals.Event_gender == 'W') & (medals.Gender == 'Men')

# Create a DataFrame with the suspicious row: suspect
suspect = medals[sus]

# Print suspect
print(suspect)
________________________________________________________
OUT:	
	         City  Edition      Sport Discipline            Athlete  NOC Gender     Event Event_gender   Medal
	23675  Sydney     2000  Athletics  Athletics  CHEPCHUMBA, Joyce  KEN    Men  marathon            W  Bronze
________________________________________________________
IPYTHONSHELL:

In [1]: medals.shape
	Out[1]: (29216, 10)

In [2]: medals.info()
	<class 'pandas.core.frame.DataFrame'>
	RangeIndex: 29216 entries, 0 to 29215
	Data columns (total 10 columns):
	City            29216 non-null object
	Edition         29216 non-null int64
	Sport           29216 non-null object
	Discipline      29216 non-null object
	Athlete         29216 non-null object
	NOC             29216 non-null object
	Gender          29216 non-null object
	Event           29216 non-null object
	Event_gender    29216 non-null object
	Medal           29216 non-null object
	dtypes: int64(1), object(9)
	memory usage: 2.2+ MB

In [3]: medals.head()
	Out[3]: 
	     City  Edition     Sport Discipline             Athlete  NOC Gender                       Event Event_gender   Medal
	0  Athens     1896  Aquatics   Swimming       HAJOS, Alfred  HUN    Men              100m freestyle            M    Gold
	1  Athens     1896  Aquatics   Swimming    HERSCHMANN, Otto  AUT    Men              100m freestyle            M  Silver
	2  Athens     1896  Aquatics   Swimming   DRIVAS, Dimitrios  GRE    Men  100m freestyle for sailors            M  Bronze
	3  Athens     1896  Aquatics   Swimming  MALOKINIS, Ioannis  GRE    Men  100m freestyle for sailors            M    Gold
	4  Athens     1896  Aquatics   Swimming  CHASAPIS, Spiridon  GRE    Men  100m freestyle for sailors            M  Silver

In [4]: medals["Gender"].unique()
	Out[4]: array(['Men', 'Women'], dtype=object)
		
In [5]: medals["Event_gender"].unique()
	Out[5]: array(['M', 'X', 'W'], dtype=object)
		
In [6]: medals.groupby("Event_gender")["Gender"].agg({"Women":lambda gr: gr[gr=="Women"].count(),"Men":lambda gr: gr[gr=="Men"].count()})
	Out[6]: 
	              Women    Men
	Event_gender              
	M                 0  20067
	W              7277      1
	X               218   1653

In [7]: medals.groupby(["Event_gender","Gender"])["Athlete"].count()
	Out[7]: 
	Event_gender  Gender
	M             Men       20067
	W             Men           1
	              Women      7277
	X             Men        1653
	              Women       218
	Name: Athlete, dtype: int64

In [8]: medals[((medals.Event_gender=="W") & (medals.Gender=="Men"))]
	Out[8]: 
	         City  Edition      Sport Discipline            Athlete  NOC Gender     Event Event_gender   Medal
	23675  Sydney     2000  Athletics  Athletics  CHEPCHUMBA, Joyce  KEN    Men  marathon            W  Bronze
________________________________________________________
INSTRUCTION:

1. Create a Boolean Series with a condition that captures 
   the only row that has medals.Event_gender == 'W' and 
   medals.Gender == 'Men'. Be sure to use the & operator.
2. Use the Boolean Series to create a DataFrame called 
   suspect with the suspicious row.
3. Print suspect. This has been done for you, so hit 
   'Submit Answer' to see the result.
________________________________________________________
GUIDE:

Locating suspicious data
You will now inspect the suspect record by locating 
the offending row.

You will see that, according to the data, Joyce 
Chepchumba was a man that won a medal in a women's 
event. That is a data error as you can confirm with 
a web search.
________________________________________________________
DATA SOURCE:

https://www.theguardian.com/sport/datablog/2012/jun/25/olympic-medal-winner-list-data
________________________________________________________
