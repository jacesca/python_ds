# Import packages
from urllib.request import urlopen, Request

# Specify the url
url = "http://www.datacamp.com/teach/documentation"

# This packages the request
request = Request(url)

# Sends the request and catches the response: response
response = urlopen(request)

# Extract the response: html
html = response.read()

# Print the html
print(html)

print(response.getheaders()) #Return list of (header, value) tuples.
print(response.geturl())     #Return the real URL of the page.
print(response.info())       #Returns message containing meta-information associated with the URL.
print(response.peek())

# Be polite and close the response!
response.close()
________________________________________________________
OUT:
b'<!doctype html>\n<html lang="en" data-direction="ltr">\n  <head>\n    <link href="https://fonts.intercomcdn.com" rel="preconnect" crossorigin>\n      <script src="https://www.googletagmanager.com/gtag/js?id=UA-39297847-9" async="async" nonce="zEZfN1jNuKr9qgZs9T7JCVLYssu2F84hnJZ7jd9YSXA="></script>\n      <script nonce="zEZfN1jNuKr9qgZs9T7JCVLYssu2F84hnJZ7jd9YSXA=">\n        window.dataLayer = window.dataLayer || [];\n        function gtag(){dataLayer.push(arguments);}\n        gtag(\'js\', new Date());\n        gtag(\'config\', \'UA-39297847-9\');\n</script>\n    <meta charset="utf-8">\n    <meta http-equiv="X-UA-Compatible" content="IE=edge">\n    <title>DataCamp Help Center</title>\n    <meta name="description" content="">\n    <meta name="viewport" content="width=device-width, initial-scale=1">\n      <meta name="intercom:trackingEvent" content="{&quot;name&quot;:&quot;Viewed Help Center&quot;,&quot;metadata&quot;:{&quot;action&quot;:&quot;viewed&quot;,&quot;object&quot;:&quot;educate_home&quot;,&quot;place&quot;:&quot;help_center&quot;,&quot;owner&quot;:&quot;educate&quot;}}" />\n\n    <link rel="stylesheet" media="all" href="https://intercom.help/_assets/application-0441d80c2b83ac7d1c1718dd24a12e4c5bca5f1e5392638de75fab7980be5b86.css" />\n    <link rel="canonical" href="http://instructor-support.datacamp.com/"/>\n\n        <link href="https://static.intercomassets.com/assets/educate/educate-favicon-64x64-at-2x-52016a3500a250d0b118c0a04ddd13b1a7364a27759483536dd1940bccdefc20.png" rel="shortcut icon" type="image/png" />\n      <style>\n        .header, .avatar__image-extra { background-color: #263e63; }\n        .article a, .c__primary { color: #263e63; }\n        .avatar__fallback { background-color: #263e63; }\n        article a.intercom-h2b-button { background-color: #263e63; border: 0; }\n      </style>\n\n      <meta property="og:title" content="DataCamp Help Center" />\n  <meta name="twitter:title" content="DataCamp Help Center" />\n\n\n<meta property="og:type" content="website" />\n<meta property="og:image" content="" />\n\n<meta name="twitter:image" content="" />\n\n  </head>\n  <body class="">\n    <header class="header">\n  <div class="container header__container o__ltr" dir="ltr">\n    <div class="content">\n      <div class="mo o__centered o__reversed header__meta_wrapper">\n        <div class="mo__body">\n          <div class="header__logo">\n            <a href="/">\n                <img alt="DataCamp Help Center" src="https://downloads.intercomcdn.com/i/o/81221/856b63d438031754b681746b/4ea2737e4266936fb423911d9c587812.png" />\n            </a>\n          </div>\n        </div>\n        <div class="mo__aside">\n          <div class="header__home__url">\n              <a target="_blank" rel=\'noopener\' href="http://www.datacamp.com/teach"><svg width="14" height="14" viewBox="0 0 14 14" xmlns="http://www.w3.org/2000/svg"><title>Group 65</title><g stroke="#FFF" fill="none" fill-rule="evenodd" stroke-linecap="round" stroke-linejoin="round"><path d="M11.5 6.73v6.77H.5v-11h7.615M4.5 9.5l7-7M13.5 5.5v-5h-5"/></g></svg><span>Go to DataCamp</span></a>\n          </div>\n        </div>\n      </div>\n          <h1 class="header__headline">Advice and answers from the DataCamp Team</h1>\n        <form action="/" autocomplete="off" class="header__form search">\n          <input type="text" autocomplete="off" class="search__input js__search-input o__ltr" placeholder="Search for articles..." tabindex="1" name="q" value="">\n          <div class="search_icons">\n            <button type="submit" class="search__submit o__ltr"></button>\n            <a class="search__clear-text__icon">\n              <svg class="interface-icon" xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16">\n                <path d="M8.018 6.643L5.375 4 4 5.375l2.643 2.643L4 10.643 5.375 12l2.643-2.625L10.625 12 12 10.643 9.357 8.018 12 5.375 10.643 4z" />\n              </svg>\n            </a>\n        </form>\n      </div>\n    </div>\n  </div>\n</header>\n\n    <div class="container">\n      <div class="content educate_content"><section class="section">\n    <div class="g__space">\n      <a href="/getting-started" class="paper ">\n        <div class="collection o__ltr">\n          <div class="collection__photo">\n            <svg role=\'img\' viewBox=\'0 0 48 48\'><g id="chat-star" stroke-width="2" fill="none" fill-rule="evenodd" stroke-linejoin="round"><path d="M20 34.942c-2.083-.12-4.292-.42-6-.942L3 39l4-9c-3.858-3.086-6-7.246-6-12C1 8.61 10.328 1 21.835 1 33.343 1 43 8.61 43 18c0 1.044-.117 2.065-.342 3.057"></path><path d="M36.016 25L40 33h7l-6 5 3 9-8-5.494L28 47l3-9-6-5h7l4.016-8z"></path></g></svg>\n          </div>\n          <div class="collection_meta" dir="ltr">\n            <h2 class="t__h3 c__primary">Getting Started</h2>\n            <p class="paper__preview">Everything you need to know to begin your DataCamp journey!</p>\n            <div class="avatar">\n  <div class="avatar__photo avatars__images o__ltr">\n        <img src="https://static.intercomassets.com/avatars/2352718/square_128/Rebecca_Robins_-_Headshot-1535969735.jpg?1535969735" alt="Becca Robins avatar" class="avatar__image">\n\n        <img src="https://static.intercomassets.com/avatars/2678519/square_128/pic2-1539176502.JPG?1539176502" alt="Jen Bricker avatar" class="avatar__image">\n\n        <img src="https://static.intercomassets.com/avatars/2637958/square_128/YR_Headshot-1539175806.JPG?1539175806" alt="Yashas Roy avatar" class="avatar__image">\n\n      <span class="avatar__image avatar__fallback">+2</span>\n  </div>\n  <div class="avatar__info">\n    <div>\n      <span class="c__darker">\n        11 articles in this collection\n      </span>\n      <br>\n      Written by <span class=\'c__darker\'> Becca Robins,</span> <span class=\'c__darker\'> Jen Bricker,</span> <span class=\'c__darker\'> Yashas Roy</span> and 2 others\n    </div>\n  </div>\n</div>\n\n          </div>\n        </div>\n      </a>\n    </div>\n    <div class="g__space">\n      <a href="/courses" class="paper ">\n        <div class="collection o__ltr">\n          <div class="collection__photo">\n            <svg role=\'img\' viewBox=\'0 0 48 48\'><g id="devices-laptop" stroke-width="2" fill="none" fill-rule="evenodd" stroke-linecap="round"><path d="M41 31H7V11h34v20z"></path><path d="M3 35V10a3 3 0 0 1 3-3h36a3 3 0 0 1 3 3v25m-16 0v2H19v-2H1v4a2 2 0 0 0 2 2h42a2 2 0 0 0 2-2v-4H29z" stroke-linejoin="round"></path></g></svg>\n          </div>\n          <div class="collection_meta" dir="ltr">\n            <h2 class="t__h3 c__primary">Courses</h2>\n            <p class="paper__preview">Everything you need to know about creating DataCamp courses.</p>\n            <div class="avatar">\n  <div class="avatar__photo avatars__images o__ltr">\n        <img src="https://static.intercomassets.com/avatars/2637958/square_128/YR_Headshot-1539175806.JPG?1539175806" alt="Yashas Roy avatar" class="avatar__image">\n\n        <img src="https://static.intercomassets.com/avatars/2247397/square_128/IMG_2763_final_square_small-1532522734.jpg?1532522734" alt="Nick Carchedi avatar" class="avatar__image">\n\n        <img src="https://static.intercomassets.com/avatars/2366194/square_128/richie-in-hairnet-1537451295.JPG?1537451295" alt="Richie Cotton avatar" class="avatar__image">\n\n      <span class="avatar__image avatar__fallback">+7</span>\n  </div>\n  <div class="avatar__info">\n    <div>\n      <span class="c__darker">\n        81 articles in this collection\n      </span>\n      <br>\n      Written by <span class=\'c__darker\'> Yashas Roy,</span> <span class=\'c__darker\'> Nick Carchedi,</span> <span class=\'c__darker\'> Richie Cotton</span> and 7 others\n    </div>\n  </div>\n</div>\n\n          </div>\n        </div>\n      </a>\n    </div>\n    <div class="g__space">\n      <a href="/daily-practice" class="paper ">\n        <div class="collection o__ltr">\n          <div class="collection__photo">\n            <svg role=\'img\' viewBox=\'0 0 48 48\'><g id="tools-dashboard" stroke-width="2" fill="none" fill-rule="evenodd" stroke-linecap="round" stroke-linejoin="round"><path d="M27 31a3 3 0 0 1-6 0 3 3 0 0 1 6 0zm-.88-2.12l9.9-9.9M5 32h4m34 .002L39 32m2.553-8.27l-3.696 1.53M31.27 13.447l-1.53 3.695M24 12v4m-7.27-2.553l1.53 3.695m-7.694.422l2.826 2.83M6.447 23.73l3.695 1.53"></path><path d="M24 8C11.297 8 1 18.3 1 31v9h46v-9C47 18.3 36.703 8 24 8z"></path></g></svg>\n          </div>\n          <div class="collection_meta" dir="ltr">\n            <h2 class="t__h3 c__primary">Daily Practice</h2>\n            <p class="paper__preview">Everything you need to know about creating DataCamp Daily Practice.</p>\n            <div class="avatar">\n  <div class="avatar__photo avatars__images o__ltr">\n        <img src="https://static.intercomassets.com/avatars/2734728/square_128/Anneleen_Beckers-xtra-small-1541624054.jpg?1541624054" alt="Anneleen Beckers avatar" class="avatar__image">\n\n  </div>\n  <div class="avatar__info">\n    <div>\n      <span class="c__darker">\n        13 articles in this collection\n      </span>\n      <br>\n      Written by <span class=\'c__darker\'> Anneleen Beckers</span>\n    </div>\n  </div>\n</div>\n\n          </div>\n        </div>\n      </a>\n    </div>\n    <div class="g__space">\n      <a href="/projects" class="paper ">\n        <div class="collection o__ltr">\n          <div class="collection__photo">\n            <svg role=\'img\' viewBox=\'0 0 48 48\'><g id="book-opened2"><path d="M24 11c0-3.866 10.297-7 23-7v33c-12.703 0-23 3.134-23 7 0-3.866-10.3-7-23-7V4c12.7 0 23 3.134 23 7zm0 0v32m-5-27.52c-3.22-1.232-7.773-2.128-13-2.48m13 8.48c-3.22-1.232-7.773-2.128-13-2.48m13 8.48c-3.22-1.232-7.773-2.128-13-2.48m13 8.48c-3.22-1.23-7.773-2.127-13-2.48m23-15.52c3.223-1.232 7.773-2.128 13-2.48m-13 8.48c3.223-1.232 7.773-2.128 13-2.48m-13 8.48c3.223-1.232 7.773-2.128 13-2.48m-13 8.48c3.223-1.23 7.773-2.127 13-2.48" stroke-width="2" fill="none" stroke-linecap="round" stroke-linejoin="round"></path></g></svg>\n          </div>\n          <div class="collection_meta" dir="ltr">\n            <h2 class="t__h3 c__primary">Projects</h2>\n            <p class="paper__preview">Everything you need to know about creating DataCamp projects.</p>\n            <div class="avatar">\n  <div class="avatar__photo avatars__images o__ltr">\n        <img src="https://static.intercomassets.com/avatars/2360843/square_128/20170928_DavidV_ByBBImagery-022-1380-1537479799.jpg?1537479799" alt="David Venturi avatar" class="avatar__image">\n\n  </div>\n  <div class="avatar__info">\n    <div>\n      <span class="c__darker">\n        19 articles in this collection\n      </span>\n      <br>\n      Written by <span class=\'c__darker\'> David Venturi</span>\n    </div>\n  </div>\n</div>\n\n          </div>\n        </div>\n      </a>\n    </div>\n    <div class="g__space">\n      <a href="/course-editor-basics" class="paper ">\n        <div class="collection o__ltr">\n          <div class="collection__photo">\n            <svg role=\'img\' viewBox=\'0 0 48 48\'><g id="book-bookmark" stroke-width="2" fill="none" fill-rule="evenodd" stroke-linecap="round"><path d="M35 31l-6-6-6 6V7h12v24z"></path><path d="M35 9h6v38H11a4 4 0 0 1-4-4V5" stroke-linejoin="round"></path><path d="M39 9V1H11a4 4 0 0 0 0 8h12" stroke-linejoin="round"></path></g></svg>\n          </div>\n          <div class="collection_meta" dir="ltr">\n            <h2 class="t__h3 c__primary">Course Editor Basics</h2>\n            <p class="paper__preview">Everything you need to know to get going with our online course editor.</p>\n            <div class="avatar">\n  <div class="avatar__photo avatars__images o__ltr">\n        <img src="https://static.intercomassets.com/avatars/2352718/square_128/Rebecca_Robins_-_Headshot-1535969735.jpg?1535969735" alt="Becca Robins avatar" class="avatar__image">\n\n        <img src="https://static.intercomassets.com/avatars/2247397/square_128/IMG_2763_final_square_small-1532522734.jpg?1532522734" alt="Nick Carchedi avatar" class="avatar__image">\n\n  </div>\n  <div class="avatar__info">\n    <div>\n      <span class="c__darker">\n        5 articles in this collection\n      </span>\n      <br>\n      Written by <span class=\'c__darker\'> Becca Robins</span> and <span class=\'c__darker\'> Nick Carchedi</span>\n    </div>\n  </div>\n</div>\n\n          </div>\n        </div>\n      </a>\n    </div>\n    <div class="g__space">\n      <a href="/tips-and-tricks" class="paper ">\n        <div class="collection o__ltr">\n          <div class="collection__photo">\n            <svg role=\'img\' viewBox=\'0 0 48 48\'><g id="comms-mail" stroke-width="2" fill="none" fill-rule="evenodd" stroke-linejoin="round"><path d="M47 3L1 22l18 7L47 3z"></path><path d="M47 3l-8 37-20-11L47 3zM19 29v16l7-12"></path></g></svg>\n          </div>\n          <div class="collection_meta" dir="ltr">\n            <h2 class="t__h3 c__primary">Tips &amp; Tricks</h2>\n            <p class="paper__preview">Become a DataCamp wizard!</p>\n            <div class="avatar">\n  <div class="avatar__photo avatars__images o__ltr">\n        <img src="https://static.intercomassets.com/avatars/2352718/square_128/Rebecca_Robins_-_Headshot-1535969735.jpg?1535969735" alt="Becca Robins avatar" class="avatar__image">\n\n  </div>\n  <div class="avatar__info">\n    <div>\n      <span class="c__darker">\n        6 articles in this collection\n      </span>\n      <br>\n      Written by <span class=\'c__darker\'> Becca Robins</span>\n    </div>\n  </div>\n</div>\n\n          </div>\n        </div>\n      </a>\n    </div>\n    <div class="g__space">\n      <a href="/frequently-asked-questions-faq" class="paper ">\n        <div class="collection o__ltr">\n          <div class="collection__photo">\n            <svg role=\'img\' viewBox=\'0 0 48 48\'><g id="chat-question" fill="none" fill-rule="evenodd"><path d="M47 21.268c0 10.363-10.297 18.765-23 18.765-2.835 0-5.55-.418-8.058-1.184L2.725 45 7.9 34.668c-4.258-3.406-6.9-8.15-6.9-13.4C1 10.904 11.297 2.502 24 2.502s23 8.402 23 18.766z" stroke-width="2" stroke-linejoin="round"></path><path d="M25 28.502a2 2 0 1 0 0 4 2 2 0 0 0 0-4" fill="#231F1F"></path><path d="M19 17.75c0-3.312 2.686-6.124 6-6.124 3.313 0 6 2.626 6 5.938 0 3.315-2.687 5.938-6 5.938V26" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></g></svg>\n          </div>\n          <div class="collection_meta" dir="ltr">\n            <h2 class="t__h3 c__primary">Frequently Asked Questions (FAQ)</h2>\n            <p class="paper__preview">Common questions that arise during content creation.</p>\n            <div class="avatar">\n  <div class="avatar__photo avatars__images o__ltr">\n        <img src="https://static.intercomassets.com/avatars/2352718/square_128/Rebecca_Robins_-_Headshot-1535969735.jpg?1535969735" alt="Becca Robins avatar" class="avatar__image">\n\n        <img src="https://static.intercomassets.com/avatars/2366194/square_128/richie-in-hairnet-1537451295.JPG?1537451295" alt="Richie Cotton avatar" class="avatar__image">\n\n        <img src="https://static.intercomassets.com/avatars/2637958/square_128/YR_Headshot-1539175806.JPG?1539175806" alt="Yashas Roy avatar" class="avatar__image">\n\n      <span class="avatar__image avatar__fallback">+3</span>\n  </div>\n  <div class="avatar__info">\n    <div>\n      <span class="c__darker">\n        48 articles in this collection\n      </span>\n      <br>\n      Written by <span class=\'c__darker\'> Becca Robins,</span> <span class=\'c__darker\'> Richie Cotton,</span> <span class=\'c__darker\'> Yashas Roy</span> and 3 others\n    </div>\n  </div>\n</div>\n\n          </div>\n        </div>\n      </a>\n    </div>\n    <div class="g__space">\n      <a href="/miscellaneous" class="paper ">\n        <div class="collection o__ltr">\n          <div class="collection__photo">\n            <svg role=\'img\' viewBox=\'0 0 48 48\'><g id="tools-edit"><path d="M14.932 43.968L2 47l3.033-12.93 31.2-31.203a4 4 0 0 1 5.658 0l4.247 4.243a4 4 0 0 1 0 5.656L14.932 43.968zm29.84-29.735L34.82 4.28m7.125 12.782L31.992 7.11M15.436 43.465l-9.9-9.9" stroke-width="2" fill="none" stroke-linecap="round" stroke-linejoin="round"></path></g></svg>\n          </div>\n          <div class="collection_meta" dir="ltr">\n            <h2 class="t__h3 c__primary">Miscellaneous</h2>\n            <p class="paper__preview">Have a question for DataCamp, but not about creating content? You&#39;ll probably find the answer here.</p>\n            <div class="avatar">\n  <div class="avatar__photo avatars__images o__ltr">\n        <img src="https://static.intercomassets.com/avatars/2352718/square_128/Rebecca_Robins_-_Headshot-1535969735.jpg?1535969735" alt="Becca Robins avatar" class="avatar__image">\n\n        <img src="https://static.intercomassets.com/avatars/2830289/square_128/IMG_0665_a-1545331304.jpg?1545331304" alt="Lisa Monteleone avatar" class="avatar__image">\n\n        <img src="https://static.intercomassets.com/avatars/2859053/square_128/gabriel_about_pic-1546620603.jpg?1546620603" alt="Gabriel de Selding avatar" class="avatar__image">\n\n  </div>\n  <div class="avatar__info">\n    <div>\n      <span class="c__darker">\n        9 articles in this collection\n      </span>\n      <br>\n      Written by <span class=\'c__darker\'> Becca Robins,</span> <span class=\'c__darker\'> Lisa Monteleone,</span> and <span class=\'c__darker\'> Gabriel de Selding</span>\n    </div>\n  </div>\n</div>\n\n          </div>\n        </div>\n      </a>\n    </div>\n</section>\n</div>\n    </div>\n    <footer class="footer">\n  <div class="container">\n    <div class="content">\n      <div class="u__cf"  dir="ltr">\n        <div class="footer__logo">\n          <a href="/">\n              <img alt="DataCamp Help Center" src="https://downloads.intercomcdn.com/i/o/81221/856b63d438031754b681746b/4ea2737e4266936fb423911d9c587812.png" />\n          </a>\n        </div>\n        <div class="footer__advert logo">\n          <img src="https://intercom.help/_assets/intercom-a6a6ac0f033657af1aebe2e9e15b94a3cd5eabf6ae8b9916df6ea49099a894d8.png" alt="Intercom" />\n          <a href="https://www.intercom.com/intercom-link?company=DataCamp&amp;solution=customer-support&amp;utm_campaign=intercom-link&amp;utm_content=We+run+on+Intercom&amp;utm_medium=help-center&amp;utm_referrer=http%3A%2F%2Finstructor-support.datacamp.com%2F&amp;utm_source=desktop-web">We run on Intercom</a>\n        </div>\n      </div>\n    </div>\n  </div>\n</footer>\n\n    \n  <script nonce="zEZfN1jNuKr9qgZs9T7JCVLYssu2F84hnJZ7jd9YSXA=">\n    window.intercomSettings = {"app_id":"ug0ps1rq"};\n</script>\n  <script nonce="zEZfN1jNuKr9qgZs9T7JCVLYssu2F84hnJZ7jd9YSXA=">\n    (function(){var w=window;var ic=w.Intercom;if(typeof ic==="function"){ic(\'reattach_activator\');ic(\'update\',intercomSettings);}else{var d=document;var i=function(){i.c(arguments)};i.q=[];i.c=function(args){i.q.push(args)};w.Intercom=i;function l(){var s=d.createElement(\'script\');s.type=\'text/javascript\';s.async=true;s.src="https://widget.intercom.io/widget/ug0ps1rq";var x=d.getElementsByTagName(\'script\')[0];x.parentNode.insertBefore(s,x);}if(w.attachEvent){w.attachEvent(\'onload\',l);}else{w.addEventListener(\'load\',l,false);}}})()\n</script>\n\n    \n\n    <script src="https://intercom.help/_assets/application-b74dd4f6e4e3e41a050fadeef9097d80c9776bf8d414c6bb086d10aa8d82441b.js" nonce="zEZfN1jNuKr9qgZs9T7JCVLYssu2F84hnJZ7jd9YSXA="></script>\n  </body>\n</html>\n'

[('Date', 'Sat, 06 Apr 2019 15:27:34 GMT'), 
 ('Content-Type', 'text/html; charset=utf-8'), 
 ('Transfer-Encoding', 'chunked'), 
 ('Connection', 'close'), 
 ('Status', '200 OK'), 
 ('Cache-Control', 'max-age=0, private, must-revalidate'), 
 ('X-XSS-Protection', '1; mode=block'), 
 ('X-Request-Id', '00a6tsqdsi4rpve66ibg'), 
 ('ETag', 'W/"3169acfa3832f8f1fb5089670487d0b3"'), 
 ('X-Runtime', '0.062633'), 
 ('X-Frame-Options', 'DENY'), 
 ('X-Content-Type-Options', 'nosniff'), 
 ('Content-Security-Policy', "default-src 'self'; 
  child-src 'self' https://platform.twitter.com 
                   https://staticxx.facebook.com 
                   https://www.facebook.com 
                   https://fast.wistia.net 
                   https://www.useloom.com 
                   https://www.loom.com 
                   https://play.vidyard.com 
                   https://player.vimeo.com 
                   https://www.youtube.com 
                   https://intercom-sheets.com 
                   https://www.intercom-reporting.com; 
  connect-src 'self' wss://*.intercom.io 
                     https://*.intercom.io 
                     https://*.intercom.com 
                     https://uploads.intercomcdn.com 
                     https://uploads.intercomusercontent.com 
                     https://www.google-analytics.com 
                     https://stats.g.doubleclick.net; 
  font-src data: https:; 
  img-src data: blob: https: http:; 
  media-src data: blob: https:; 
  object-src 'self' https://static.intercomassets.com; 
  script-src 'self' https://connect.facebook.net 
		    https://platform.twitter.com 
		    https://static.intercomassets.com
		    https://googleadservices.com 
		    https://googletagmanager.com 
		    https://google-analytics.com 
		    https://widget.intercom.io 
		    https://js.intercomcdn.com 
		    https://www.googletagmanager.com 
		    https://www.google-analytics.com 
		    https://intercom.help 'unsafe-inline'; 
  style-src 'self' 'unsafe-inline' https://fonts.intercomcdn.com 
                                   https://static.intercomassets.com 
                                   https://static.intercomcdn.com 
                                   https://marketing.intercomassets.com 
                                   https://marketing.intercomcdn.com 
                                   https://intercom.help"), 
 ('Server', 'nginx'), 
 ('X-Infra-Control', 'true'), 
 ('Strict-Transport-Security', 'max-age=15552000; includeSubDomains;'), 
 ('Referrer-Policy', 'no-referrer-when-downgrade'), 
 ('Expect-CT', 'max-age=15552000'), 
 ('X-Kong-Upstream-Latency', '71'), 
 ('X-Kong-Proxy-Latency', '3'), 
 ('Via', 'kong/0.14.0')]

https://instructor-support.datacamp.com/

Date: Sat, 06 Apr 2019 15:27:34 GMT
Content-Type: text/html; charset=utf-8
Transfer-Encoding: chunked
Connection: close
Status: 200 OK
Cache-Control: max-age=0, private, must-revalidate
X-XSS-Protection: 1; mode=block
X-Request-Id: 00a6tsqdsi4rpve66ibg
ETag: W/"3169acfa3832f8f1fb5089670487d0b3"
X-Runtime: 0.062633
X-Frame-Options: DENY
X-Content-Type-Options: nosniff
Content-Security-Policy: default-src 'self'; child-src 'self' https://platform.twitter.com https://staticxx.facebook.com https://www.facebook.com https://fast.wistia.net https://www.useloom.com https://www.loom.com https://play.vidyard.com https://player.vimeo.com https://www.youtube.com https://intercom-sheets.com https://www.intercom-reporting.com; connect-src 'self' wss://*.intercom.io https://*.intercom.io https://*.intercom.com https://uploads.intercomcdn.com https://uploads.intercomusercontent.com https://www.google-analytics.com https://stats.g.doubleclick.net; font-src data: https:; img-src data: blob: https: http:; media-src data: blob: https:; object-src 'self' https://static.intercomassets.com; script-src 'self' https://connect.facebook.net https://platform.twitter.com https://static.intercomassets.com https://googleadservices.com https://googletagmanager.com https://google-analytics.com https://widget.intercom.io https://js.intercomcdn.com https://www.googletagmanager.com https://www.google-analytics.com https://intercom.help 'unsafe-inline'; style-src 'self' 'unsafe-inline' https://fonts.intercomcdn.com https://static.intercomassets.com https://static.intercomcdn.com https://marketing.intercomassets.com https://marketing.intercomcdn.com https://intercom.help
Server: nginx
X-Infra-Control: true
Strict-Transport-Security: max-age=15552000; includeSubDomains;
Referrer-Policy: no-referrer-when-downgrade
Expect-CT: max-age=15552000
X-Kong-Upstream-Latency: 71
X-Kong-Proxy-Latency: 3
Via: kong/0.14.0

b''
________________________________________________________
INSTRUCTION:
1. Send the request and catch the response in the 
   variable response with the function urlopen(), 
   as in the previous exercise.
2. Extract the response using the read() method and 
   store the result in the variable html.
3. Print the string html.
4. Hit submit to perform all of the above and to close 
   the response: be tidy!
________________________________________________________
GUIDE:
Printing HTTP request results in Python using urllib
You have just packaged and sent a GET request to 
"http://www.datacamp.com/teach/documentation" and then 
caught the response. You saw that such a response is a 
http.client.HTTPResponse object. The question remains: 
what can you do with this response?

Well, as it came from an HTML page, you could read it 
to extract the HTML and, in fact, such a 
http.client.HTTPResponse object has an associated 
read() method. In this exercise, you'll build on your 
previous great work to extract the response and print 
the HTML.
________________________________________________________
IPYTHONSHELL
In [1]: import http.client

In [2]: help(http.client.HTTPResponse)
Help on class HTTPResponse in module http.client:

class HTTPResponse(io.BufferedIOBase)
 |  Base class for buffered IO objects.
 |  
 |  The main difference with RawIOBase is that the read() method
 |  supports omitting the size argument, and does not have a default
 |  implementation that defers to readinto().
 |  
 |  In addition, read(), readinto() and write() may raise
 |  BlockingIOError if the underlying raw stream is in non-blocking
 |  mode and not ready; unlike their raw counterparts, they will never
 |  return None.
 |  
 |  A typical implementation should not inherit from a RawIOBase
 |  implementation, but wrap one.
 |  
 |  Method resolution order:
 |      HTTPResponse
 |      io.BufferedIOBase
 |      _io._BufferedIOBase
 |      io.IOBase
 |      _io._IOBase
 |      builtins.object
 |  
 |  Methods defined here:
 |  
 |  __init__(self, sock, debuglevel=0, method=None, url=None)
 |      Initialize self.  See help(type(self)) for accurate signature.
 |  
 |  __iter__(self)
 |      Implement iter(self).
 |  
 |  begin(self)
 |  
 |  close(self)
 |      Flush and close the IO object.
 |      
 |      This method has no effect if the file is already closed.
 |  
 |  fileno(self)
 |      Returns underlying file descriptor if one exists.
 |      
 |      OSError is raised if the IO object does not use a file descriptor.
 |  
 |  flush(self)
 |      Flush write buffers, if applicable.
 |      
 |      This is not implemented for read-only and non-blocking streams.
 |  
 |  getcode(self)
 |      Return the HTTP status code that was sent with the response,
 |      or None if the URL is not an HTTP URL.
 |  
 |  getheader(self, name, default=None)
 |      Returns the value of the header matching *name*.
 |      
 |      If there are multiple matching headers, the values are
 |      combined into a single string separated by commas and spaces.
 |      
 |      If no matching header is found, returns *default* or None if
 |      the *default* is not specified.
 |      
 |      If the headers are unknown, raises http.client.ResponseNotReady.
 |  
 |  getheaders(self)
 |      Return list of (header, value) tuples.
 |  
 |  geturl(self)
 |      Return the real URL of the page.
 |      
 |      In some cases, the HTTP server redirects a client to another
 |      URL. The urlopen() function handles this transparently, but in
 |      some cases the caller needs to know which URL the client was
 |      redirected to. The geturl() method can be used to get at this
 |      redirected URL.
 |  
 |  info(self)
 |      Returns an instance of the class mimetools.Message containing
 |      meta-information associated with the URL.
 |      
 |      When the method is HTTP, these headers are those returned by
 |      the server at the head of the retrieved HTML page (including
 |      Content-Length and Content-Type).
 |      
 |      When the method is FTP, a Content-Length header will be
 |      present if (as is now usual) the server passed back a file
 |      length in response to the FTP retrieval request. A
 |      Content-Type header will be present if the MIME type can be
 |      guessed.
 |      
 |      When the method is local-file, returned headers will include
 |      a Date representing the file's last-modified time, a
 |      Content-Length giving file size, and a Content-Type
 |      containing a guess at the file's type. See also the
 |      description of the mimetools module.
 |  
 |  isclosed(self)
 |      True if the connection is closed.
 |  
 |  peek(self, n=-1)
 |  
 |  read(self, amt=None)
 |      Read and return up to n bytes.
 |      
 |      If the argument is omitted, None, or negative, reads and
 |      returns all data until EOF.
 |      
 |      If the argument is positive, and the underlying raw stream is
 |      not 'interactive', multiple raw reads may be issued to satisfy
 |      the byte count (unless EOF is reached first).  But for
 |      interactive raw streams (as well as sockets and pipes), at most
 |      one raw read will be issued, and a short result does not imply
 |      that EOF is imminent.
 |      
 |      Returns an empty bytes object on EOF.
 |      
 |      Returns None if the underlying raw stream was open in non-blocking
 |      mode and no data is available at the moment.
 |  
 |  read1(self, n=-1)
 |      Read with at most one underlying system call.  If at least one
 |      byte is buffered, return that instead.
 |  
 |  readable(self)
 |      Always returns True
 |  
 |  readinto(self, b)
 |      Read up to len(b) bytes into bytearray b and return the number
 |      of bytes read.
 |  
 |  readline(self, limit=-1)
 |      Read and return a line from the stream.
 |      
 |      If size is specified, at most size bytes will be read.
 |      
 |      The line terminator is always b'\n' for binary files; for text
 |      files, the newlines argument to open can be used to select the line
 |      terminator(s) recognized.
 |  
 |  ----------------------------------------------------------------------
 |  Data and other attributes defined here:
 |  
 |  __abstractmethods__ = frozenset()
 |  
 |  ----------------------------------------------------------------------
 |  Methods inherited from _io._BufferedIOBase:
 |  
 |  detach(self, /)
 |      Disconnect this buffer from its underlying raw stream and return it.
 |      
 |      After the raw stream has been detached, the buffer is in an unusable
 |      state.
 |  
 |  readinto1(self, buffer, /)
 |  
 |  write(...)
 |      Write the given buffer to the IO stream.
 |      
 |      Returns the number of bytes written, which is always the length of b
 |      in bytes.
 |      
 |      Raises BlockingIOError if the buffer is full and the
 |      underlying raw stream cannot accept more data at the moment.
 |  
 |  ----------------------------------------------------------------------
 |  Methods inherited from _io._IOBase:
 |  
 |  __del__(...)
 |  
 |  __enter__(...)
 |  
 |  __exit__(...)
 |  
 |  __new__(*args, **kwargs) from builtins.type
 |      Create and return a new object.  See help(type) for accurate signature.
 |  
 |  __next__(self, /)
 |      Implement next(self).
 |  
 |  isatty(self, /)
 |      Return whether this is an 'interactive' stream.
 |      
 |      Return False if it can't be determined.
 |  
 |  readlines(self, hint=-1, /)
 |      Return a list of lines from the stream.
 |      
 |      hint can be specified to control the number of lines read: no more
 |      lines will be read if the total size (in bytes/characters) of all
 |      lines so far exceeds hint.
 |  
 |  seek(...)
 |      Change stream position.
 |      
 |      Change the stream position to the given byte offset. The offset is
 |      interpreted relative to the position indicated by whence.  Values
 |      for whence are:
 |      
 |      * 0 -- start of stream (the default); offset should be zero or positive
 |      * 1 -- current stream position; offset may be negative
 |      * 2 -- end of stream; offset is usually negative
 |      
 |      Return the new absolute position.
 |  
 |  seekable(self, /)
 |      Return whether object supports random access.
 |      
 |      If False, seek(), tell() and truncate() will raise OSError.
 |      This method may need to do a test seek().
 |  
 |  tell(self, /)
 |      Return current stream position.
 |  
 |  truncate(...)
 |      Truncate file to size bytes.
 |      
 |      File pointer is left unchanged.  Size defaults to the current IO
 |      position as reported by tell().  Returns the new size.
 |  
 |  writable(self, /)
 |      Return whether object was opened for writing.
 |      
 |      If False, write() will raise OSError.
 |  
 |  writelines(self, lines, /)
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors inherited from _io._IOBase:
 |  
 |  __dict__
 |  
 |  closed